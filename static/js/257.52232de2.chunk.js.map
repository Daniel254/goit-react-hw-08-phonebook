{"version":3,"file":"static/js/257.52232de2.chunk.js","mappings":"4LAEaA,E,QAAgBC,GAAAA,QAAH,wG,SCS1B,EATgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,UAACH,EAAD,WACGE,IAAS,wBAAKA,IACdC,O,uGCJMC,EAAYH,EAAAA,GAAAA,MAAH,2CAITI,EAAQJ,EAAAA,GAAAA,MAAH,mLAWLK,EAASL,EAAAA,GAAAA,OAAH,kYAwBNM,EAAaN,EAAAA,GAAAA,EAAH,2Z,SCDvB,MArCA,YAKI,IAJFO,EAIC,EAJDA,WAIC,IAHDC,eAAAA,OAGC,MAHgB,SAGhB,EAFDC,EAEC,EAFDA,OAEC,IADDC,aAAAA,OACC,MADc,KACd,EACD,OACE,kBAAMC,SAAUF,EAAOG,aAAcF,aAAcA,EAAnD,UACGH,EAAWM,KAAI,WAAiCC,GAAjC,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,IAAgBC,KAAAA,OAAhB,MAAuB,OAAvB,SACd,UAAC,WAAD,YACE,UAACd,EAAD,WACGY,GACD,SAACX,GAAD,QAAOa,KAAMA,GAAUR,EAAOS,cAAcF,SAE9C,SAACV,EAAD,CAAYU,KAAK,OAAOG,UAAU,QALfL,OASvB,SAACT,EAAD,CAAQY,KAAK,SAAb,SAAuBT,S,gICfd,SAASY,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,KAAbD,SACFZ,GAASc,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbR,KAAM,GACNS,MAAO,GACPC,SAAU,IAEZf,SAAU,SAAAgB,GACRN,GAASO,EAAAA,EAAAA,IAAaD,OAmB1B,OACE,SAACE,EAAA,EAAD,CACEtB,WAjBe,CACjB,CACEQ,MAAO,QACPC,KAAM,QAER,CACED,MAAO,SACPC,KAAM,SAER,CACED,MAAO,YACPC,KAAM,WACNC,KAAM,aAMNT,eAAgB,UAChBC,OAAQA,I,4CC/BC,SAASqB,IACtB,OACE,UAACC,EAAA,EAAD,YACE,SAACX,EAAD,KACA,UAACY,EAAA,EAAD,CAAKC,GAAI,GAAIC,UAAW,SAAxB,0CAEE,SAAC,KAAD,CAAMC,GAAIC,EAAAA,EAAAA,MAAV","sources":["components/ui/Section/Section.styled.jsx","components/ui/Section/Section.jsx","components/ui/SimpleForm/SimpleForm.styled.jsx","components/ui/SimpleForm/SimpleForm.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  padding: 20px;\n  background-color: #fff;\n  color: #707070;\n  width: 100%;\n`;\n","import { SectionStyled } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      {title && <h2>{title}</h2>}\n      {children}\n    </SectionStyled>\n  );\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const LabelName = styled.label`\n  display: block;\n`;\n\nexport const Input = styled.input`\n  outline: 0;\n  background: #f2f2f2;\n  width: 100%;\n  border: 0;\n  margin: 0 0 15px;\n  padding: 15px;\n  box-sizing: border-box;\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  text-transform: uppercase;\n  outline: 0;\n  background: #4caf50;\n  width: 100%;\n  border: 0;\n  padding: 15px;\n  color: #ffffff;\n  font-size: 14px;\n  transition: all 0.3 ease;\n  cursor: pointer;\n  :hover,\n  :active,\n  :focus {\n    background: #43a047;\n  }\n  :disabled {\n    background: #81ca85;\n    :hover {\n      cursor: default;\n    }\n  }\n`;\n\nexport const InputError = styled.p`\n  font-size: 12px;\n  color: #bc0000;\n  height: auto;\n  margin-top: 0;\n  @keyframes append-animate {\n    from {\n      max-height: 0;\n      transform: scale(0);\n      opacity: 0;\n      margin-bottom: 0 auto;\n    }\n    to {\n      max-height: 100px;\n      transform: scale(1);\n      opacity: 1;\n      margin-bottom: 1em;\n    }\n  }\n  animation: append-animate 0.3s linear;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Input, InputError, LabelName } from './SimpleForm.styled';\nfunction SimpleForm({\n  formFields,\n  submitBtnLabel = 'Submit',\n  formik,\n  autoComplete = 'on',\n}) {\n  return (\n    <form onSubmit={formik.handleSubmit} autoComplete={autoComplete}>\n      {formFields.map(({ label, name, type = 'text' }, index) => (\n        <React.Fragment key={index}>\n          <LabelName>\n            {label}\n            <Input type={type} {...formik.getFieldProps(name)} />\n          </LabelName>\n          <InputError name=\"name\" component=\"p\" />\n        </React.Fragment>\n      ))}\n\n      <Button type=\"submit\">{submitBtnLabel}</Button>\n    </form>\n  );\n}\n\nSimpleForm.propTypes = {\n  formFields: PropTypes.array.isRequired,\n  submitBtnLabel: PropTypes.string,\n  formik: PropTypes.object,\n  autoComplete: PropTypes.string,\n  // [\n  //   {\n  //     label: 'Label Name',\n  //     name: 'defaultName',\n  //     type: 'text',\n  //   },\n  // ]\n};\n\nexport default SimpleForm;\n","import SimpleForm from 'components/ui/SimpleForm';\nimport { useFormik } from 'formik';\nimport { useRedux } from 'hooks';\nimport React from 'react';\nimport { registerUser } from 'redux/auth';\n\nexport default function RegistrationForm() {\n  const { dispatch } = useRedux();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      dispatch(registerUser(values));\n    },\n  });\n\n  const formFields = [\n    {\n      label: 'Name:',\n      name: 'name',\n    },\n    {\n      label: 'Email:',\n      name: 'email',\n    },\n    {\n      label: 'Password:',\n      name: 'password',\n      type: 'password',\n    },\n  ];\n  return (\n    <SimpleForm\n      formFields={formFields}\n      submitBtnLabel={'Sign up'}\n      formik={formik}\n    />\n  );\n}\n","import RegistrationForm from 'components/RegistrationForm';\nimport Box from 'components/ui/Box';\nimport Section from 'components/ui/Section';\nimport { routes } from 'constants/routes';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function RegisterPage() {\n  return (\n    <Section>\n      <RegistrationForm />\n      <Box py={20} textAlign={'center'}>\n        Already have an account?&nbsp;\n        <Link to={routes.LOGIN}>SignIn</Link>\n      </Box>\n    </Section>\n  );\n}\n"],"names":["SectionStyled","styled","title","children","LabelName","Input","Button","InputError","formFields","submitBtnLabel","formik","autoComplete","onSubmit","handleSubmit","map","index","label","name","type","getFieldProps","component","RegistrationForm","dispatch","useRedux","useFormik","initialValues","email","password","values","registerUser","SimpleForm","RegisterPage","Section","Box","py","textAlign","to","routes"],"sourceRoot":""}